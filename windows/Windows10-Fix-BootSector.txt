How to fix Windows 10 boot sector on the wrong drive?
-----------------------------------------------------
You will need to create a startup repair disk for Windows 10. 
If you don't have one you can download create one using the following instructions:
How to download official Windows 10 ISO files: http://answers.microsoft.com/en-us/windows/wiki/windows_10-windows_install/how-to-download-official-windows-10-iso-files/35cde7ec-5b6f-481c-a02d-dadf465df326

Method 1:
===============
1. Put the Windows 10 installation disc into the disc drive, and then start the computer.
2. Press a key when the message indicating "Press any key to boot from CD or DVD …". appears.
3. Select a language, a time, a currency, and a keyboard or another input method, and then click Next.
4. Click Repair your computer.
5. Click the operating system that you want to repair, and then click Next.
6. In the System Recovery Options dialog box, click Command Prompt.
7. Type sfc /scannow, and then press ENTER.

Method 2:
===============
1. Put the Windows Windows 10 installation disc in the disc drive, and then start the computer.
2. Press any key when the message indicating "Press any key to boot from CD or DVD …". appears.
3. Select a language, time, currency, and a keyboard or another input method. Then click Next.
4. Click Repair your computer.
5. Click the operating system that you want to repair, and then click Next.
6. In the System Recovery Options dialog box, click Command Prompt.
7. Type Bootrec /RebuildBcd, and then press ENTER.

Method 3:
===============
1. Put the Windows Windows 10 installation disc into the disc drive, and then start the computer.
2. Press a key when the message indicating "Press any key to boot from CD or DVD …". appears.
3. Select a language, a time, a currency, and a keyboard or another input method, and then click Next.
4. Click Repair your computer.
5. Click the operating system that you want to repair, and then click Next.
6. In the System Recovery Options dialog box, click Command Prompt.
7. Type BOOTREC /FIXMBR, and then press ENTER.
8. Type BOOTREC /FIXBOOT, and then press ENTER.
9. Type Drive:\boot\Bootsect.exe /NT60 All, and then press ENTER.

Note: In this command, Drive is the drive where the Windows 10 installation media is located.

Create a Windows 10 Bootmanager in another Disk
-----------------------------------------------
Windows Boot Manager (BOOTMGR) is a UEFI (Unified Extensible Firmware Interface) application provided by Microsoft. UEFI application is, in its basic form, it's an application that connects a computer’s firmware to its Operating System. UEFI applications launch Windows Boot Manager, the boot manager determines which boot entries to run. The boot manager performs these two functions by initializing boot libraries and reading the boot configuration database.

Windows boot libraries are special codes that extend the functionality of the BOOTMGR UEFI functionality. Similarly, the boot configuration database stores Windows boot options in the Boot Configuration Data (BCD) store.

The solution had been to create a new EFI partition on the new SSD/HDD with the current/active Windows 10 installation. First I had to boot from the old installation (from another HDD). A recovery CD/DVD or USB key will do as well.

To create a recovery drive:
  * Press the windows key and type: 'create recovery drive' and select. Enter admin password
  * select 'back up system files' to the 'recovery drive' and click next
  * connect a USB driver and click next
  * click create and wait a bit
  * restart and enter the BIOS /EFI
  * look out for boot options and select the newly create USB key
  * save & exit

Now your system should reboot from the USB key. If not, try to use a USB connector directly on your motherboard.

To get some space on the SSD/HDD for the EFI partition we shrink the main partition, create a new EFI partition and write a bootloader to it by doing following:
  * Start a terminal with SHIFT-F10 during setup.
  * open 'diskpart', some more info - https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/diskpart
  * list all the available disks with 'list disk'
  * 'select disk <X>', X is the one where the desired Windows 10 installation is located.
  * 'list partition'
  * 'select partition <X>', X is the one to be shrinked
  * 'shrink desired=500', let's shrink it by 500MB
  * 'create partition EFI size=100'
  * 'format quick fs=fat32 label="System"', or maybe label=EFI if you like better?
  * 'create partition msr size=400'
  * 'exit'
  * 'bootrec /fixboot'
  * find and select the volume by 'list volume' and 'select volume <X>'
  * assign a drive number X to the selected volume by 'assign letter=<X>'
  * "bcdboot <c:\Windows> /s <X>: /f all", X is the new drive letter, some more info - https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcdboot-command-line-options-techref-di

For me this worked like a charm. Sometimes the pressure needs to be big enough to form diamonds.

Xtra info:
The 'bcdboot' tool is enough. (It is even possible to install Windows with only 'dism' and 'bcdboot'.)

For BIOS mode: Create or choose the 'system' partition – an NTFS partition that'll hold the Windows BOOTMGR and the BCD. It must be a primary partition, and Microsoft also wants it to be separate from the main Windows partition (C:). It doesn't need to be the first partition, but it must be within the first 2TiB of the disk. The currently present "System Reserved" partition will do, I think?

    Make sure the chosen 'system' partition is set as "active".

For UEFI mode: Create a choose an 'EFI system' partition – a FAT32 partition that'll hold the Windows BOOTMGR and the BCD. This time, due to its filesystem it has to be separate from the C: partition. It must also have the correct "partition type" GUID partition table (GPT).

For all modes:
  * Temporarily assign a drive letter (S:) to the 'system' partition.
  * Run 'bcdboot C:\Windows /s <S:>' to copy the boot manager files to the new 'system' partition and build a new BCD.
  * You probably won't need to install the MBR boot code, as Windows initializes empty disks with the correct MBR boot code already, but that can be re-done using 'bootsect /nt60 <S:> /mbr'.
  * Unassign the system partition's drive letter.
  * Power off, physically disconnect the old drive, and see if it works.
  * If it works, don't forget to delete the old 'system' partition (the 100 MB one on old Disk).

UEFI/GPT-based hard drive partitions
Create custom partition layouts for your hard disk drives (HDDs), solid-state drives (SSDs), and other drives when deploying Windows to Unified Extensible Firmware Interface (UEFI)–based devices.

Partition Requirements
  - When you deploy Windows to a UEFI-based device, you must format the hard drive that includes the Windows partition by using a GUID partition table (GPT) file system. Additional drives may use either the GPT or the master boot record (MBR) file format.
  - A GPT drive may have up to 128 partitions.
  - Each partition can have a maximum of 18 exabytes (~18.8 million terabytes) of space.

System partition
  - The device must contain a system partition. On GPT drives, this is known as the EFI System Partition, or the ESP. This partition is usually stored on the primary hard drive. The device boots to this partition.
  - The minimum size of this partition is 100 MB, and must be formatted using the FAT32 file format.
  - This partition is managed by the operating system, and should not contain any other files, including Windows RE tools.

Microsoft reserved partition (MSR)
  - In Windows 10, the size of the MSR is 16 MB.
  - Add an MSR to each GPT drive to help with partition management. The MSR is a reserved partition that does not receive a partition ID. It cannot store user data.

Other utility partitions
  - Any other utility partitions not managed by Windows must be located before the Windows, data, and recovery image partitions. This allows end users to perform actions such as resizing the Windows partition without affecting system utilities.
  - Protect end users from accidentally modifying utility partitions by identifying them using a GPT attribute. This prevents these partitions from appearing in File Explorer.
  
Windows partition
  - The partition must have at least 20 gigabytes (GB) of drive space for 64-bit versions, or 16 GB for 32-bit versions.
  - The Windows partition must be formatted using the NTFS file format.
  - The Windows partition must have 16 GB of free space after the user has completed the Out Of Box Experience (OOBE) and Automatic Maintenance has completed.

Recovery tools partition
  - This partition must be at least 300 MB.
  - The Windows Recovery Environment (Windows RE) tools require additional free space:
     - A minimum of 52 MB is required but 250 MB is recommended, to accomodate future updates, especially with custom partition layouts.
  - When calculating free space, note:
     - The recovery image, winre.wim, is typically between 250-300MB, depending on what drivers, languages, and customizations you add.
     - The file system itself can take up additional space. For example, NTFS may reserve 5-15MB or more on a 750MB partition.
  - This partition must use the Type ID: 'DE94BBA4-06D1-4D40-A16A-BFD50179D6AC'.
  - The recovery tools should be in a separate partition than the Windows partition to support automatic failover and to support booting partitions encrypted with Windows BitLocker Drive Encryption.
  - We recommend that you place this partition immediately after the Windows partition. This allows Windows to modify and recreate the partition later if future updates require a larger recovery image.
